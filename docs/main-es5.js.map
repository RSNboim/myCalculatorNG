{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/input1/input1.component.ts","webpack:///src/app/input1/input1.component.html","webpack:///src/app/input1history/input1history.component.ts","webpack:///src/app/input1history/input1history.component.html","webpack:///src/app/my-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","Input1Component","serv","num","equation","result","value","eval","console","log","arrHistory","push","i","arr","sendValue","Input1historyComponent","MyServiceService","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<app-input1></app-input1>\r\n<app-input1history></app-input1history>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { Input1Component } from './input1/input1.component';\nimport { Input1historyComponent } from './input1history/input1history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Input1Component,\n    Input1historyComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { log } from 'util';\nimport { MyServiceService } from '../my-service.service';\n\n@Component({\n  selector: 'app-input1',\n  templateUrl: './input1.component.html',\n  styleUrls: ['./input1.component.css']\n})\nexport class Input1Component implements OnInit {\n  num: any = ''\n  equation: string = ''\n  result: string = ''\n  constructor(public serv: MyServiceService) { }\n\n  ngOnInit(): void {\n  }\n  sendValue(value: any) {\n    if (value != '=') {\n      this.num += value\n    }\n    if (value == '=') {\n      this.equation = this.num\n      this.result = eval(this.equation);\n      console.log(this.result)\n      this.num = this.result\n      this.serv.arrHistory.push(this.equation + \" =\" + this.num);\n\n    }\n    if (value == 'C') {\n      this.num = ''\n    }\n  }\n  myHistory(): void {\n    for (let i of this.serv.arrHistory) {\n      this.serv.arr.push(i)\n    }\n\n  }\n}\n","<div><p>input1 works!</p>\n<input [value]=\"num\">\n\n<button class=\"bttn\" (click)=\"sendValue('1')\">1</button>\n<button class=\"bttn\" (click)=\"sendValue('2')\">2</button>\n<button class=\"bttn\" (click)=\"sendValue('3')\">3</button>\n<button class=\"bttn\" (click)=\"sendValue('4')\">4</button>\n<button class=\"bttn\" (click)=\"sendValue('5')\">5</button>\n<button class=\"bttn\" (click)=\"sendValue('6')\">6</button>\n<button class=\"bttn\" (click)=\"sendValue('7')\">7</button>\n<button class=\"bttn\" (click)=\"sendValue('8')\">8</button>\n<button class=\"bttn\" (click)=\"sendValue('9')\">9</button>\n<button class=\"bttn\" (click)=\"sendValue('0')\">0</button>\n<button class=\"bttn\" (click)=\"sendValue('+')\">+</button>\n<button class=\"bttn\" (click)=\"sendValue('-')\">-</button>\n<button class=\"bttn\" (click)=\"sendValue('*')\">x</button>\n<button class=\"bttn\" (click)=\"sendValue('/')\">/</button>\n<button class=\"bttn\" (click)=\"sendValue('=')\">=</button>\n<button class=\"bttn\" (click)=\"sendValue('C')\">C</button>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MyServiceService } from '../my-service.service';\n\n@Component({\n  selector: 'app-input1history',\n  templateUrl: './input1history.component.html',\n  styleUrls: ['./input1history.component.css']\n})\nexport class Input1historyComponent implements OnInit {\n\n  constructor(public serv:MyServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul list-style-type: disc>\n    <li *ngFor= 'let x of serv.arrHistory  '>\n        {{x}}\n    </li>\n    \n\n    \n</ul>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\narr : string[] =[]\narrHistory : string[] = []\n  \n\nconstructor() { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}